// Generated by CoffeeScript 1.10.0
(function() {
  var Option, Overlay, Popper, js, limit, overlay, queer, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  js = {};

  queer = {};

  overlay = null;

  limit = 0;

  js.boot = function() {
    limit = $('#limit');
    return 1;
  };

  js.mstats = function() {
    var delta, fps;
    queer.stats = $('<div id="stats">');
    fps = $('<div>fps: <div class="value" id="fps">0</div></div>');
    delta = $('<div>delta: <div class="value" id="delta">0</div></div>');
    queer.stats.append(fps);
    queer.stats.append(delta);
    $('#limit').append(queer.stats);
    queer.fps = $('#fps');
    queer.delta = $('#delta');
    return 0;
  };

  js.second = function() {
    queer.fps.html(app.fps);
    queer.delta.html(app.delta);
    return 0;
  };

  js.overlay = function() {
    root.overlay = overlay = new Overlay;
    if (typeof app !== "undefined" && app !== null) {
      app.overlay = overlay;
    }
    return 1;
  };

  Overlay = (function() {
    function Overlay() {
      this.build();
    }

    Overlay.prototype.build = function() {
      limit.append((this.shipping = new Popper('shipping')).element);
      limit.append((this.view = new Popper('view', 'right')).element);
      this.view.add(new Option('gay'));
      return 1;
    };

    return Overlay;

  })();

  Popper = (function() {
    function Popper(name, _class) {
      var that;
      this.name = name;
      this["class"] = _class != null ? _class : '';
      this.options = [];
      this.insides = null;
      this.element = $("<div class=\"popper\">");
      this.button = $("<div class=\"button " + this["class"] + "\">" + this.name + "</div>");
      that = this;
      this.element.mouseenter(function() {
        return that.expire(false);
      });
      this.element.mouseleave(function() {
        return that.expire(true);
      });
      this.button.click(function() {
        return that.expand();
      });
      this.element.append(this.button);
      this.time = 0;
    }

    Popper.prototype.add = function(item) {
      this.options.push(new Option);
      return 1;
    };

    Popper.prototype.expand = function() {
      var i, len, o, ref;
      console.log('expanding');
      this.insides = $('<div class="insides">');
      ref = this.options;
      for (i = 0, len = ref.length; i < len; i++) {
        o = ref[i];
        this.insides.append(o.element);
      }
      this.element.append(this.insides);
      return 1;
    };

    Popper.prototype.expire = function(yea) {
      var that;
      console.log("expire  " + yea);
      that = this;
      if (yea) {
        this.time = setTimeout(function() {
          return that.vanish();
        }, 1000);
        1;
      } else {
        clearTimeout(this.time);
      }
      return 0;
    };

    Popper.prototype.vanish = function() {
      if (this.insides == null) {
        return;
      }
      this.insides.remove();
      this.insides = null;
      return 0;
    };

    return Popper;

  })();

  Option = (function() {
    function Option(name, _class) {
      this.name = name != null ? name : 'an option';
      this["class"] = _class != null ? _class : '';
      this.element = $("<div class=\"option " + this["class"] + "\">" + this.name + "</div>");
    }

    return Option;

  })();

  root.Overlay = Overlay;

  root.js = js;

}).call(this);
